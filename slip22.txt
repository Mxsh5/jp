SLIP 22
Q1) Write a program to create an abstract class named Shape that contains two integers and an empty method named printArea(). Provide three classes named Rectangle, Triangle and Circle such that each one of the classes extends the class Shape. Each one of the classes contain only the method printArea() that prints the area of the given shape. (use method overriding).
SOLUTION:
import java.util.Scanner;
abstract class Shape {
int length, width;
// Copy code
public Shape(int length, int width) {
this.length = length;
this.width = width;
}
abstract void printArea();
}
class Rectangle extends Shape {
public Rectangle(int length, int width) {
super(length, width);
}
// Copy code
@Override
void printArea() {
int area = length * width;
System.out.println("The area of the rectangle is: " + area);
}
}
class Triangle extends Shape {
public Triangle(int length, int width) {
super(length, width);
}
// Copy code
@Override
void printArea() {
int area = (length * width) / 2;
System.out.println("The area of the triangle is: " + area);
}
}
class Circle extends Shape {
public Circle(int radius) {
super(radius, 0);
}
// Copy code
@Override
void printArea() {
double area = Math.PI * Math.pow(length, 2);
System.out.println("The area of the circle is: " + area);
}
}
public class Main {
public static void main(String[] args) {
Scanner sc = new Scanner(System.in);
System.out.println("Enter shape (rectangle, triangle, circle): ");
String shape = sc.nextLine();
if (shape.equalsIgnoreCase("rectangle")) {
System.out.println("Enter length and width: ");
int length = sc.nextInt();
int width = sc.nextInt();
Rectangle rectangle = new Rectangle(length, width);
rectangle.printArea();
} else if (shape.equalsIgnoreCase("triangle")) {
System.out.println("Enter base and height: ");
int base = sc.nextInt();
int height = sc.nextInt();
Triangle triangle = new Triangle(base, height);
triangle.printArea();
} else if (shape.equalsIgnoreCase("circle")) {
System.out.println("Enter radius: ");
int radius = sc.nextInt();
Circle circle = new Circle(radius);
circle.printArea();
} else {
System.out.println("Invalid shape!");
}
}
}
Q2) Write a program that handles all mouse events and shows the event name at the center of the Window, red in color when a mouse event is fired. (Use adapter classes).
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JFrame;
import javax.swing.JPanel;
public class Main extends JPanel {
String event = "";
// Copy code
public Main() {
addMouseListener(new MouseHandler());
addMouseMotionListener(new MouseHandler());
}
public void paintComponent(Graphics g) {
super.paintComponent(g);
g.setColor(Color.RED);
g.drawString(event, getWidth() / 2, getHeight() / 2);
}
class MouseHandler extends MouseAdapter {
public void mouseClicked(MouseEvent e) {
event = "Mouse clicked";
repaint();
}
public void mouseEntered(MouseEvent e) {
event = "Mouse entered";
repaint();
}
public void mouseExited(MouseEvent e) {
event = "Mouse exited";
repaint();
}
public void mousePressed(MouseEvent e) {
event = "Mouse pressed";
repaint();
}
public void mouseReleased(MouseEvent e) {
event = "Mouse released";
repaint();
}
public void mouseDragged(MouseEvent e) {
event = "Mouse dragged";
repaint();
}
public void mouseMoved(MouseEvent e) {
event = "Mouse moved";
repaint();
}
}
public static void main(String[] args) {
JFrame frame = new JFrame("Mouse Events");
frame.add(new Main());
frame.setSize(300, 300);
frame.setVisible(true);
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
}
}