SLIP 6
Q1) Write a program to display the Employee(Empid, Empname, Empdesignation, Empsal) information using toString().
SOLUTION:
// package Practicals;
import java.util.*;
class Employee {
int id;
String name;
String deptname;
double salary;
static int count;
Employee(){
id=0;
name="Name";
deptname="Comp sci";
salary=20000;
}
Employee(int id , String name , String deptname , double salary){
this.id=id;
this.name=name;
this.deptname=deptname;
this.salary=salary;
count++;
}
void display() {
System.out.println("[ID:" + id + " NAME: " + name + " DEPAMAENT NAME: " + deptname + " SALArY: " + salary + " ]");
}
}
public class Main {
public static void main(String[] args) {
Scanner sc = new Scanner(System.in);
System.out.println("How many Employees ");
int number = sc.nextInt();
Employee[] emp = new Employee[number];
for(int j=0; j<number; j++)
{
System.out.println("Enter ID ");
int id = sc.nextInt();
System.out.println("Enter Name ");
String name = sc.next();
System.out.println("Enter Department name");
String deptname = sc.next();
System.out.println("Enter Salary");
int salary = sc.nextInt();
emp[j] = new Employee(id,name,deptname,salary);
}
for(int j=0; j<number; j++)
{
emp[j].display();
}
System.out.println("\nThere are total "+Employee.count+" Employees.");
}
}
Q2) Create an abstract class “order” having members id, description. Create two subclasses “PurchaseOrder” and “Sales Order” having members customer name and Vendor name respectively. Definemethods accept and display in all cases. Create 3 objects each of Purchase Order and Sales Order and accept and display details.
SOLUTION:
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
abstract class Order{
String id,description;
}
class PurchaseOrder extends Order{
String Customername,Vendorname;
public void accept() throws IOException{
System.out.println("Enter the id,description,names of customers and vendors: ");
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
id=br.readLine();
description=br.readLine();
Customername=br.readLine();
Vendorname=br.readLine();
}
public void display(){
System.out.println("id: "+id);
System.out.println("Description: "+description);
System.out.println("Customername: "+Customername);
System.out.println("Vendorname: "+Vendorname);
System.out.println("----------------------");
}
}
class SalesOrder extends Order{
String Customername,Vendorname;
public void accept() throws IOException{
System.out.println("Enter the id,description,names of customers and vendors: ");
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
id=br.readLine();
description=br.readLine();
Customername=br.readLine();
Vendorname=br.readLine();
}
public void display(){
System.out.println("id: "+id);
System.out.println("Description: "+description);
System.out.println("Customername: "+Customername);
System.out.println("Vendorname: "+Vendorname);
System.out.println("----------------------");
}
}
public class Main {
public static void main(String [] args) throws IOException{
int i;
System.out.println("Select Any One: ");
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
System.out.println("1.Purchase Order");
System.out.println("2.Sales Order");
int ch=Integer.parseInt(br.readLine());
switch(ch){
case 1:
System.out.println("Enter the number of purchase Orders: ");
int n=Integer.parseInt(br.readLine());
PurchaseOrder [] l=new PurchaseOrder[n];
for(i=0;i<n;i++){
l[i]=new PurchaseOrder();
l[i].accept();
}
for(i=0;i<n;i++){
l[i].display();
System.out.println ("Object is created");
}
break;
case 2:
System.out.println("Enter the number of sales orders: ");
int m=Integer.parseInt(br.readLine());
SalesOrder [] h=new SalesOrder[m];
for(i=0;i<m;i++){
h[i]=new SalesOrder();
h[i].accept();
}
for(i=0;i<m;i++){
h[i].display();
System.out.println(" Object is created ");
}
break;
}
}
}